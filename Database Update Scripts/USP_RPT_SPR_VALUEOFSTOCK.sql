USE [CARSDEV]
GO
/****** Object:  StoredProcedure [dbo].[USP_RPT_SPR_VALUEOFSTOCK]    Script Date: 03.05.2022 12:29:03 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*************************************** APPLICATION: ABS10 *************************************************************        
* MODULE : Reports        
* FILE NAME : USP_RPT_SPR_VALUEOFSTOCK.PRC>         
* PURPOSE : TO GENEARTE RESULT SET FOR Global Spare Parts Report      
* AUTHOR :
* DATE  : 20.11.2007        
*********************************************************************************************************************/        
/*********************************************************************************************************************          
I/P : @MakeFrom, @MakeTo, @SprNoFrom, @SprNoTo, @SprNameFrom, @SprNameTo, @DiscCodeBuyFrom, @DiscCodeBuyTo, @DiscCodeSellFrom, @DiscCodeSellTo        
O/P : -- OUTPUT PARAMETERS        
@OV_RETVALUE - 'INSFLG' IF ERROR, 'OK' OTHERWISE        
       
ERROR CODE        
DESCRIPTION  
INT.VerNO : NOV21.0       
********************************************************************************************************************/        
--'*********************************************************************************'*********************************        
--'* MODIFIED HISTORY :           
--'* S.NO  RFC NO/BUG ID   DATE        AUTHOR  DESCRIPTION         
--* #0001#        
--'*********************************************************************************'*********************************        
ALTER PROCEDURE [dbo].[USP_RPT_SPR_VALUEOFSTOCK]
--(
	--@WareHouseFrom		NVARCHAR(100)	= NULL,
	--@WareHouseTo		NVARCHAR(100)	= NULL,
	--@MakeFrom			NVARCHAR(100)	= NULL,
	--@MakeTo				NVARCHAR(100)	= NULL,
	--@SprNoFrom			NVARCHAR(100)	= NULL,
	--@SprNoTo			NVARCHAR(100)	= NULL,
	--@PrdtGrpFrom		NVARCHAR(100)	= NULL,
	--@PrdtGrpTo			NVARCHAR(100)	= NULL,
	--@ClassCodeFrom		NVARCHAR(100)	= NULL,
	--@ClassCodeTo		NVARCHAR(100)	= NULL,
	--@LocationFrom		NVARCHAR(100)	= NULL,
	--@LocationTo			NVARCHAR(100)	= NULL,
	--@QtyStockFrom		DECIMAL			= NULL,
	--@QtyStockTo			DECIMAL			= NULL,
	--@PriceType			CHAR(2)			= 'S',	
	--@StockValueFrom		DECIMAL			= NULL,
	@pPriceTypeValue		INT			,
	@pWh				INT				
--)
AS
BEGIN
IF(@pPriceTypeValue = 1)
BEGIN
select MAX(SUPP_CURRENTNO) AS SUPPLIER, (SELECT CATG_DESC FROM TBL_MAS_ITEM_CATG WHERE ID_ITEM_CATG = IM.ID_ITEM_CATG) AS CATG_CODE, (SELECT DESCRIPTION FROM TBL_MAS_ITEM_CATG WHERE ID_ITEM_CATG = IM.ID_ITEM_CATG) AS CATG_CODE, 
SUM(AVG_PRICE * ITEM_AVAIL_QTY) AS COST_PRICE, SUM(JD.JOBI_ORDER_QTY * IM.AVG_PRICE) AS ORDRE_SUM, SUM((IM.AVG_PRICE * ITEM_AVAIL_QTY)+(JD.JOBI_ORDER_QTY * IM.AVG_PRICE)) AS LAGERVERDI, SUM((IM.ITEM_PRICE * ITEM_AVAIL_QTY)+(JD.JOBI_ORDER_QTY * IM.ITEM_PRICE)) AS SALES_VALUE
 from TBL_MAS_ITEM_MASTER IM
 inner join TBL_WO_JOB_DETAIL JD on JD.ID_ITEM_JOB = IM.ID_ITEM
 LEFT JOIN TBL_WO_DETAIL WD ON WD.ID_WODET_SEQ = JD.ID_WODET_SEQ_JOB
 
 WHERE IM.ID_WH_ITEM = @pWh AND (WD.JOB_STATUS <> 'INV' OR WD.JOB_STATUS <> 'DEL')
 GROUP BY ID_ITEM_CATG ORDER BY SUPPLIER ASC
 END

 ELSE IF @pPriceTypeValue = 2
 BEGIN
 select MAX(SUPP_CURRENTNO) AS SUPPLIER, (SELECT CATG_DESC FROM TBL_MAS_ITEM_CATG WHERE ID_ITEM_CATG = IM.ID_ITEM_CATG) AS CATG_CODE, (SELECT DESCRIPTION FROM TBL_MAS_ITEM_CATG WHERE ID_ITEM_CATG = IM.ID_ITEM_CATG) AS CATG_CODE, 
SUM(COST_PRICE1 * ITEM_AVAIL_QTY) AS COST_PRICE, SUM(JD.JOBI_ORDER_QTY * IM.COST_PRICE1) AS ORDRE_SUM, SUM((IM.COST_PRICE1 * ITEM_AVAIL_QTY)+(JD.JOBI_ORDER_QTY * IM.COST_PRICE1)) AS LAGERVERDI, SUM((IM.ITEM_PRICE * ITEM_AVAIL_QTY)+(JD.JOBI_ORDER_QTY * IM.ITEM_PRICE)) AS SALES_VALUE
 from TBL_MAS_ITEM_MASTER IM
 inner join TBL_WO_JOB_DETAIL JD on JD.ID_ITEM_JOB = IM.ID_ITEM
 LEFT JOIN TBL_WO_DETAIL WD ON WD.ID_WODET_SEQ = JD.ID_WODET_SEQ_JOB
 
 WHERE IM.ID_WH_ITEM = @pWh AND (WD.JOB_STATUS <> 'INV' OR WD.JOB_STATUS <> 'DEL')
 GROUP BY ID_ITEM_CATG ORDER BY SUPPLIER ASC
 END

END

--BEGIN

---- To avoid extra resultsets from the procedure
--SET NOCOUNT ON;
----Declarations
--DECLARE @MaxVal DECIMAL
--DECLARE @MinVal DECIMAL
--SELECT @MaxVal=9999999999999.99, @MinVal=-9999999999999.99

--IF LEN(LTRIM(RTRIM(@WareHouseFrom)))=0        
--  SET @WareHouseFrom = NULL
--IF LEN(LTRIM(RTRIM(@WareHouseTo)))=0        
--  SET @WareHouseTo = NULL
--IF LEN(LTRIM(RTRIM(@MakeFrom)))=0        
--  SET @MakeFrom = NULL
--IF LEN(LTRIM(RTRIM(@MakeTo)))=0        
--  SET @MakeTo = NULL
--IF LEN(LTRIM(RTRIM(@SprNoFrom)))=0        
--  SET @SprNoFrom = NULL
--IF LEN(LTRIM(RTRIM(@SprNoTo)))=0        
--  SET @SprNoTo = NULL
--IF LEN(LTRIM(RTRIM(@PrdtGrpFrom)))=0  
--	SET @PrdtGrpFrom = NULL      
--IF LEN(LTRIM(RTRIM(@PrdtGrpTo)))=0        
--  SET @PrdtGrpTo = NULL
--IF LEN(LTRIM(RTRIM(@ClassCodeFrom)))=0        
--  SET @ClassCodeFrom = NULL
--IF LEN(LTRIM(RTRIM(@ClassCodeTo)))=0        
--  SET @ClassCodeTo = NULL
--IF LEN(LTRIM(RTRIM(@LocationFrom)))=0        
--  SET @LocationFrom = NULL
--IF LEN(LTRIM(RTRIM(@LocationTo)))=0        
--  SET @LocationTo = NULL
--IF LEN(LTRIM(RTRIM(@QtyStockFrom)))=0        
--  SET @QtyStockFrom = NULL
--IF LEN(LTRIM(RTRIM(@QtyStockTo)))=0        
--  SET @QtyStockFrom = NULL

--DECLARE @ID_SPAREPARTNUMF VARCHAR(30)
--DECLARE @ID_SPAREPARTNUMT VARCHAR(30) 
--Declare @Use_Approve varchar(10)
  
-- /*Selecting spare parts from and to values when prtial text is entered in search*/ 
--	SET @ID_SPAREPARTNUMF=ISNULL(@SprNoFrom,(SELECT MIN(ID_ITEM) FROM TBL_MAS_ITEM_MASTER))+'%'
--	SET @SprNoFrom = isnull((SELECT MIN(ID_ITEM) FROM TBL_MAS_ITEM_MASTER where ID_ITEM like @ID_SPAREPARTNUMF),@SprNoFrom)
--	SET @ID_SPAREPARTNUMT=ISNULL(@SprNoTo,(SELECT MAX(ID_ITEM) FROM TBL_MAS_ITEM_MASTER))+'%'
--	SET @SprNoTo = isnull((SELECT MAX(ID_ITEM) FROM TBL_MAS_ITEM_MASTER where ID_ITEM like @ID_SPAREPARTNUMT),@SprNoTo)
--	SELECT @Use_Approve= isnull([DESCRIPTION],'False') FROM TBL_MAS_SETTINGS WHERE ID_CONFIG ='USEAPPROVE'

--SELECT distinct
--	 WH_NAME [WAREHOUSE],
--	 ID_MAKE_NAME [MAKE],
--	 CATG_DESC [PRODUCT GROUP],
--	 ITEMMASTER.ID_ITEM [SPARE PART NO], 
--	 ITEM_DESC [SPARE PART NAME],
--	 --ITEM_AVAIL_QTY [AVAILABLE QTY],
--	 [AVAILABLE QTY]= 
--	 CASE WHEN isnull(FLG_APPROVE,1)=1 THEN
--	 ITEMMASTER.ITEM_AVAIL_QTY
--	 when isnull(@Use_Approve,'False')='False' then
--	 ITEMMASTER.ITEM_AVAIL_QTY
--	 when isnull(FLG_UPDATE_STOCK,0)=0 then
--	  ITEMMASTER.ITEM_AVAIL_QTY
--	  else
--	 	 (ITEMMASTER.ITEM_AVAIL_QTY -
--	 	(ISNULL((SELECT  SUM(ISNULL(ABS(spr.DELIVEREDQTY),0))   
--			FROM TBL_SPR_INWARDREGISTER spr
--			--inner join TBL_MAS_ITEM_MASTER ITEMMASTER1 on
--			--	 ITEMMASTER1.ID_ITEM=spr.ID_ITEM   
--			--	 AND ITEMMASTER1.ID_MAKE=spr.ID_MAKE  
--			--	 AND ITEMMASTER1.ID_WH_ITEM=spr.ID_WH_ITEM 
--				 	WHERE   
--				 ITEMMASTER.ID_ITEM=spr.ID_ITEM     
--				 AND ITEMMASTER.ID_MAKE=spr.ID_MAKE     
--				 AND ITEMMASTER.ID_WH_ITEM=spr.ID_WH_ITEM 
--				 and ISNULL(FLG_APPROVE,1)=0  
			
--		),0)))
--		END,
--	 [PRICE] = ISNULL(CASE  
--						WHEN @PriceType='A' THEN ITEMMASTER.AVG_PRICE
--						WHEN @PriceType='S' THEN ITEM_PRICE
--						WHEN @PriceType='C1' THEN ITEMMASTER.COST_PRICE1
--						END,0),
--	[PURCHASE ORDER VALUE] = ISNULL(ISNULL(QTY_NOT_DELIVERED,0)  * ISNULL((CASE 
--									WHEN @PriceType='A' THEN ITEMMASTER.AVG_PRICE
--									WHEN @PriceType='S' THEN ITEM_PRICE
--									WHEN @PriceType='C1' THEN ITEMMASTER.COST_PRICE1
--									END),0),0),
--	[VALUE OF STOCK] = ROUND(ISNULL( CASE WHEN isnull(FLG_APPROVE,1)=1 THEN
--	 ITEMMASTER.ITEM_AVAIL_QTY
--	 when isnull(@Use_Approve,'False')='False' then
--	 ITEMMASTER.ITEM_AVAIL_QTY
--	 when isnull(FLG_UPDATE_STOCK,0)=0 then
--	  ITEMMASTER.ITEM_AVAIL_QTY
--	  else
--	 	 (ITEMMASTER.ITEM_AVAIL_QTY -
--	 	(ISNULL((SELECT  SUM(ISNULL(ABS(spr.DELIVEREDQTY),0))   
--			FROM TBL_SPR_INWARDREGISTER spr
--				 	WHERE   
--				 ITEMMASTER.ID_ITEM=spr.ID_ITEM     
--				 AND ITEMMASTER.ID_MAKE=spr.ID_MAKE     
--				 AND ITEMMASTER.ID_WH_ITEM=spr.ID_WH_ITEM 
--				 and ISNULL(FLG_APPROVE,1)=0  
			
--		),0)))
--		END  * ISNULL((CASE 
--									WHEN @PriceType='A' THEN ITEMMASTER.AVG_PRICE
--									WHEN @PriceType='S' THEN ITEM_PRICE
--									WHEN @PriceType='C1' THEN ITEMMASTER.COST_PRICE1
--									END),0),0),2),
--	[ORDER VALUE NOT INVOICED]= 
--								-- *****************************************
--								-- Modified Date : 16th March 2009
--								-- Bug ID        : 4572
--								--ISNULL((SELECT SUM(ISNULL(JOBI_DELIVER_QTY,0))- SUM(ISNULL(INVL_DELIVER_QTY,0)) FROM TBL_INV_DETAIL_LINES LEFT JOIN TBL_WO_JOB_DETAIL 
--/********Row 244**********/	
--		ROUND((ISNULL((SELECT  SUM(ISNULL(ABS(TBL_WO_JOB_DETAIL.JOBI_DELIVER_QTY),0))   
--			FROM TBL_WO_JOB_DETAIL   
--			inner join TBL_WO_DETAIL on ID_WODET_SEQ=ID_WODET_SEQ_JOB
--			WHERE   
--				 ITEMMASTER.ID_ITEM=ID_ITEM_JOB    
--				 AND ITEMMASTER.ID_MAKE=ID_MAKE_JOB   
--				 AND ITEMMASTER.ID_WH_ITEM=ID_WAREHOUSE  
--				 AND TBL_WO_JOB_DETAIL.CREATED_BY <> 'DataMigrationTool'
--				 AND JOB_STATUS IN ('JCD','RINV','CSA','JST','RWRK')
--		),0))
--	--(ISNULL((SELECT  SUM(ISNULL(TBL_WO_JOB_DETAIL.JOBI_DELIVER_QTY,0))   
--	--		FROM TBL_WO_JOB_DETAIL   
--	--		WHERE   
--	--			 ITEMMASTER.ID_ITEM=ID_ITEM_JOB    
--	--			 AND ITEMMASTER.ID_MAKE=ID_MAKE_JOB   
--	--			 AND ITEMMASTER.ID_WH_ITEM=ID_WAREHOUSE  
--	--			 AND CREATED_BY <> 'DataMigrationTool'
--	--		),0)- ISNULL((SELECT SUM(ISNULL(TBL_INV_DETAIL_LINES.INVL_DELIVER_QTY,0))   
--	--				FROM TBL_WO_JOB_DETAIL    
--	--					INNER JOIN TBL_INV_DETAIL_LINES                 
--	--				ON TBL_WO_JOB_DETAIL.ID_WOITEM_SEQ = TBL_INV_DETAIL_LINES.ID_WOITEM_SEQ                   
--	--					INNER JOIN TBL_INV_HEADER     
--	--				ON TBL_INV_HEADER.ID_INV_NO=TBL_INV_DETAIL_LINES.ID_INV_NO     
--	--					AND ID_CN_NO IS NULL    
--	--				WHERE   
--	--					ITEMMASTER.ID_ITEM=ID_ITEM_JOB    
--	--					AND ITEMMASTER.ID_MAKE=ID_MAKE_JOB   
--	--					AND ITEMMASTER.ID_WH_ITEM=TBL_WO_JOB_DETAIL.ID_WAREHOUSE  
--	--					AND TBL_WO_JOB_DETAIL.CREATED_BY <> 'DataMigrationTool'
--	--		),0))    
--/********Row 244 - Change End**********/	
--			 * ISNULL((CASE  
--									WHEN @PriceType='A' THEN ITEMMASTER.AVG_PRICE
--									WHEN @PriceType='S' THEN ITEM_PRICE
--									WHEN @PriceType='C1' THEN ITEMMASTER.COST_PRICE1
--									END),0),2)								
--									,
--	[DIFFERENCE VALUE]= ROUND(ISNULL(ISNULL([DIFFERENCE],0)* ISNULL((CASE 
--									WHEN @PriceType='A' THEN ITEMMASTER.AVG_PRICE
--									WHEN @PriceType='S' THEN ITEM_PRICE
--									WHEN @PriceType='C1' THEN ITEMMASTER.COST_PRICE1
--									END),0),0),2),
--	DPT_NAME [DEPARTMENT],SUP.SUP_Name
--FROM 
--	 TBL_MAS_ITEM_MASTER ITEMMASTER
--	INNER JOIN TBL_MAS_ITEM_WAREHOUSE
--	 ON ITEMMASTER.ID_WH_ITEM=TBL_MAS_ITEM_WAREHOUSE.ID_WH
--	INNER JOIN TBL_MAS_MAKE
--	 ON ITEMMASTER.ID_MAKE=TBL_MAS_MAKE.ID_MAKE
--	LEFT OUTER JOIN TBL_SPR_DISCOUNTCODE DISCBUY
--	 ON ITEMMASTER.ITEM_DISC_CODE_BUY=DISCBUY.DISCOUNTCODE
--	LEFT OUTER JOIN TBL_SPR_DISCOUNTCODE DISCSELL
--	 ON ITEMMASTER.ITEM_DISC_CODE=DISCSELL.DISCOUNTCODE
--	LEFT OUTER JOIN TBL_MAS_ITEM_CATG
--	 ON ITEMMASTER.ID_ITEM_CATG=TBL_MAS_ITEM_CATG.ID_ITEM_CATG
--	LEFT OUTER JOIN TBL_SPR_COUNTING
--	 ON TBL_SPR_COUNTING.ID_ITEM=ITEMMASTER.ID_ITEM
--		AND ITEMMASTER.ID_WH_ITEM=TBL_SPR_COUNTING.ID_WH
--		AND ITEMMASTER.SUPP_CURRENTNO=TBL_SPR_COUNTING.SUPP_CURRENTNO
--		AND CLOSED=0
--	INNER JOIN TBL_SPR_DEPT_WH
--	 ON TBL_SPR_DEPT_WH.ID_DEPARTMENT=@DeptId AND TBL_SPR_DEPT_WH.ID_WAREHOUSE=ITEMMASTER.ID_WH_ITEM
--	INNER JOIN TBL_MAS_DEPT 
--	 ON TBL_MAS_DEPT.ID_DEPT=@DeptId
--	 LEFT OUTER JOIN TBL_MAS_SUPPLIER SUP
--	 ON TBL_MAS_ITEM_CATG.ID_SUPPLIER = SUP.ID_SUPPLIER
--	 	LEFT OUTER JOIN TBL_SPR_INWARDREGISTER
--	 ON TBL_SPR_INWARDREGISTER.ID_ITEM=ITEMMASTER.ID_ITEM
--		AND ITEMMASTER.ID_WH_ITEM=TBL_SPR_INWARDREGISTER.ID_WH_ITEM
--		AND ITEMMASTER.ID_MAKE=TBL_SPR_INWARDREGISTER.ID_MAKE
--		and TBL_SPR_INWARDREGISTER.FLG_APPROVE=0
	
	 
--WHERE
--	ISNULL(WH_NAME,'') BETWEEN  ISNULL(@WareHouseFrom,'')  AND  ISNULL(@WareHouseto,(SELECT MAX(WH_NAME) FROM TBL_MAS_ITEM_WAREHOUSE)) 
-- AND
--	ISNULL(TBL_MAS_MAKE.ID_MAKE,'') BETWEEN ISNULL(@MakeFrom,'')  AND  ISNULL(@MakeTo,(SELECT MAX(TBL_MAS_MAKE.ID_MAKE) FROM TBL_MAS_MAKE)) 
-- AND
--	ISNULL(ITEMMASTER.ID_ITEM,'') BETWEEN ISNULL(@SprNoFrom,'')  AND  ISNULL(@SprNoTo,(SELECT MAX(ID_ITEM) FROM TBL_MAS_ITEM_MASTER))
-- AND
--	ISNULL(CATG_DESC,'') BETWEEN  ISNULL(@PrdtGrpFrom,'') AND  ISNULL(@PrdtGrpTo,(SELECT MAX(CATG_DESC) FROM TBL_MAS_ITEM_CATG)) 
-- AND
--	ISNULL(ITEMMASTER.LOCATION,'') BETWEEN  ISNULL(@LocationFrom,'') AND ISNULL(@LocationTo,(SELECT MAX(LOCATION) FROM TBL_MAS_ITEM_MASTER)) 
-- AND
--	ISNULL(CLASS_CODE,'') BETWEEN  ISNULL(@ClassCodeFrom,'')  AND  ISNULL(@ClassCodeTo,(SELECT MAX(CLASS_CODE) FROM TBL_MAS_ITEM_MASTER)) 
-- AND
--	ISNULL(ITEM_AVAIL_QTY,0) BETWEEN  ISNULL(@QtyStockFrom,(SELECT MIN(ITEM_AVAIL_QTY) FROM TBL_MAS_ITEM_MASTER))  AND  ISNULL(@QtyStockTo,(SELECT MAX(ITEM_AVAIL_QTY) FROM TBL_MAS_ITEM_MASTER)) 
-- AND
--	(ISNULL(ITEM_AVAIL_QTY,0)  * ISNULL((CASE 
--									WHEN @PriceType='A' THEN ITEMMASTER.AVG_PRICE
--									WHEN @PriceType='S' THEN ITEM_PRICE
--									WHEN @PriceType='C1' THEN ITEMMASTER.COST_PRICE1
--									END),0))
--	BETWEEN ISNULL(@StockValueFrom,@MinVal) AND ISNULL(@StockValueTo,@MaxVal) 
--	--and TBL_SPR_INWARDREGISTER.FLG_APPROVE=0
--	order by WH_NAME,ID_MAKE_NAME,ITEMMASTER.ID_ITEM
----	group by WH_NAME,ID_MAKE_NAME,ITEMMASTER.ITEM_AVAIL_QTY ,CATG_DESC,ITEMMASTER.ID_ITEM,ITEMMASTER.AVG_PRICE,ITEM_PRICE,ITEMMASTER.COST_PRICE1,COST_PRICE2,ITEMMASTER.ITEM_DESC
----	,ITEMMASTER.QTY_NOT_DELIVERED,ITEMMASTER.ID_MAKE,ITEMMASTER.ID_WH_ITEM,TBL_SPR_COUNTING.DIFFERENCE,TBL_MAS_DEPT.DPT_Name
----,SUP.SUP_Name,TBL_SPR_INWARDREGISTER.FLG_APPROVE,TBL_SPR_INWARDREGISTER.DELIVEREDQTY
 
--SET NOCOUNT OFF;
--END
